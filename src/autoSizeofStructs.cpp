// Generated programmatically at 2016-07-15 18:47:24 
#include "RCUDA.h"
#include <cuda.h>
#include <driver_types.h>
#include <surface_types.h>
#include <texture_types.h>
#include <vector_types.h>


extern "C"
SEXP R_getSizeofStructs()
{
    SEXP r_ans, names;
    unsigned int i = 0, n = 158;
    PROTECT(r_ans = NEW_INTEGER(n));
    PROTECT(names = NEW_CHARACTER(n));
    
    INTEGER(r_ans)[i] = sizeof(struct CUuuid_st);
    SET_STRING_ELT(names, i++, mkChar("CUuuid_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUuuid_st);
    SET_STRING_ELT(names, i++, mkChar("CUuuid"));
    INTEGER(r_ans)[i] = sizeof(struct CUuuid_st);
    SET_STRING_ELT(names, i++, mkChar("CUuuid_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUipcEventHandle_st);
    SET_STRING_ELT(names, i++, mkChar("CUipcEventHandle_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUipcEventHandle_st);
    SET_STRING_ELT(names, i++, mkChar("CUipcEventHandle"));
    INTEGER(r_ans)[i] = sizeof(struct CUipcEventHandle_st);
    SET_STRING_ELT(names, i++, mkChar("CUipcEventHandle_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUipcMemHandle_st);
    SET_STRING_ELT(names, i++, mkChar("CUipcMemHandle_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUipcMemHandle_st);
    SET_STRING_ELT(names, i++, mkChar("CUipcMemHandle"));
    INTEGER(r_ans)[i] = sizeof(struct CUipcMemHandle_st);
    SET_STRING_ELT(names, i++, mkChar("CUipcMemHandle_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUdevprop_st);
    SET_STRING_ELT(names, i++, mkChar("CUdevprop_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUdevprop_st);
    SET_STRING_ELT(names, i++, mkChar("CUdevprop"));
    INTEGER(r_ans)[i] = sizeof(struct CUdevprop_st);
    SET_STRING_ELT(names, i++, mkChar("CUdevprop_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_MEMCPY2D_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_MEMCPY2D_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_MEMCPY2D_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_MEMCPY2D"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_MEMCPY2D_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_MEMCPY2D_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_MEMCPY3D_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_MEMCPY3D_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_MEMCPY3D_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_MEMCPY3D"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_MEMCPY3D_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_MEMCPY3D_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_MEMCPY3D_PEER_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_MEMCPY3D_PEER_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_MEMCPY3D_PEER_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_MEMCPY3D_PEER"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_MEMCPY3D_PEER_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_MEMCPY3D_PEER_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_ARRAY_DESCRIPTOR_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_ARRAY_DESCRIPTOR_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_ARRAY_DESCRIPTOR_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_ARRAY_DESCRIPTOR"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_ARRAY_DESCRIPTOR_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_ARRAY_DESCRIPTOR_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_ARRAY3D_DESCRIPTOR_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_ARRAY3D_DESCRIPTOR_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_ARRAY3D_DESCRIPTOR_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_ARRAY3D_DESCRIPTOR"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_ARRAY3D_DESCRIPTOR_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_ARRAY3D_DESCRIPTOR_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_RESOURCE_DESC_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_RESOURCE_DESC_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_RESOURCE_DESC_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_RESOURCE_DESC"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_RESOURCE_DESC_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_RESOURCE_DESC_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_TEXTURE_DESC_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_TEXTURE_DESC_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_TEXTURE_DESC_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_TEXTURE_DESC"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_TEXTURE_DESC_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_TEXTURE_DESC_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_RESOURCE_VIEW_DESC_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_RESOURCE_VIEW_DESC_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_RESOURCE_VIEW_DESC_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_RESOURCE_VIEW_DESC"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_RESOURCE_VIEW_DESC_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_RESOURCE_VIEW_DESC_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_POINTER_ATTRIBUTE_P2P_TOKENS"));
    INTEGER(r_ans)[i] = sizeof(struct CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st);
    SET_STRING_ELT(names, i++, mkChar("CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st"));
    INTEGER(r_ans)[i] = sizeof(struct cudaChannelFormatDesc);
    SET_STRING_ELT(names, i++, mkChar("cudaChannelFormatDesc"));
    INTEGER(r_ans)[i] = sizeof(struct cudaPitchedPtr);
    SET_STRING_ELT(names, i++, mkChar("cudaPitchedPtr"));
    INTEGER(r_ans)[i] = sizeof(struct cudaExtent);
    SET_STRING_ELT(names, i++, mkChar("cudaExtent"));
    INTEGER(r_ans)[i] = sizeof(struct cudaPos);
    SET_STRING_ELT(names, i++, mkChar("cudaPos"));
    INTEGER(r_ans)[i] = sizeof(struct cudaMemcpy3DParms);
    SET_STRING_ELT(names, i++, mkChar("cudaMemcpy3DParms"));
    INTEGER(r_ans)[i] = sizeof(struct cudaMemcpy3DPeerParms);
    SET_STRING_ELT(names, i++, mkChar("cudaMemcpy3DPeerParms"));
    INTEGER(r_ans)[i] = sizeof(struct cudaResourceDesc);
    SET_STRING_ELT(names, i++, mkChar("cudaResourceDesc"));
    INTEGER(r_ans)[i] = sizeof(struct cudaResourceViewDesc);
    SET_STRING_ELT(names, i++, mkChar("cudaResourceViewDesc"));
    INTEGER(r_ans)[i] = sizeof(struct cudaPointerAttributes);
    SET_STRING_ELT(names, i++, mkChar("cudaPointerAttributes"));
    INTEGER(r_ans)[i] = sizeof(struct cudaFuncAttributes);
    SET_STRING_ELT(names, i++, mkChar("cudaFuncAttributes"));
    INTEGER(r_ans)[i] = sizeof(struct cudaDeviceProp);
    SET_STRING_ELT(names, i++, mkChar("cudaDeviceProp"));
    INTEGER(r_ans)[i] = sizeof(struct cudaIpcEventHandle_st);
    SET_STRING_ELT(names, i++, mkChar("cudaIpcEventHandle_st"));
    INTEGER(r_ans)[i] = sizeof(struct cudaIpcEventHandle_st);
    SET_STRING_ELT(names, i++, mkChar("cudaIpcEventHandle_t"));
    INTEGER(r_ans)[i] = sizeof(struct cudaIpcEventHandle_st);
    SET_STRING_ELT(names, i++, mkChar("cudaIpcEventHandle_st"));
    INTEGER(r_ans)[i] = sizeof(struct cudaIpcMemHandle_st);
    SET_STRING_ELT(names, i++, mkChar("cudaIpcMemHandle_st"));
    INTEGER(r_ans)[i] = sizeof(struct cudaIpcMemHandle_st);
    SET_STRING_ELT(names, i++, mkChar("cudaIpcMemHandle_t"));
    INTEGER(r_ans)[i] = sizeof(struct cudaIpcMemHandle_st);
    SET_STRING_ELT(names, i++, mkChar("cudaIpcMemHandle_st"));
    INTEGER(r_ans)[i] = sizeof(struct CUuuid_st);
    SET_STRING_ELT(names, i++, mkChar("cudaUUID_t"));
    INTEGER(r_ans)[i] = sizeof(struct surfaceReference);
    SET_STRING_ELT(names, i++, mkChar("surfaceReference"));
    INTEGER(r_ans)[i] = sizeof(struct textureReference);
    SET_STRING_ELT(names, i++, mkChar("textureReference"));
    INTEGER(r_ans)[i] = sizeof(struct cudaTextureDesc);
    SET_STRING_ELT(names, i++, mkChar("cudaTextureDesc"));
    INTEGER(r_ans)[i] = sizeof(struct char1);
    SET_STRING_ELT(names, i++, mkChar("char1"));
    INTEGER(r_ans)[i] = sizeof(struct uchar1);
    SET_STRING_ELT(names, i++, mkChar("uchar1"));
    INTEGER(r_ans)[i] = sizeof(struct char2);
    SET_STRING_ELT(names, i++, mkChar("char2"));
    INTEGER(r_ans)[i] = sizeof(struct uchar2);
    SET_STRING_ELT(names, i++, mkChar("uchar2"));
    INTEGER(r_ans)[i] = sizeof(struct char3);
    SET_STRING_ELT(names, i++, mkChar("char3"));
    INTEGER(r_ans)[i] = sizeof(struct uchar3);
    SET_STRING_ELT(names, i++, mkChar("uchar3"));
    INTEGER(r_ans)[i] = sizeof(struct char4);
    SET_STRING_ELT(names, i++, mkChar("char4"));
    INTEGER(r_ans)[i] = sizeof(struct uchar4);
    SET_STRING_ELT(names, i++, mkChar("uchar4"));
    INTEGER(r_ans)[i] = sizeof(struct short1);
    SET_STRING_ELT(names, i++, mkChar("short1"));
    INTEGER(r_ans)[i] = sizeof(struct ushort1);
    SET_STRING_ELT(names, i++, mkChar("ushort1"));
    INTEGER(r_ans)[i] = sizeof(struct short2);
    SET_STRING_ELT(names, i++, mkChar("short2"));
    INTEGER(r_ans)[i] = sizeof(struct ushort2);
    SET_STRING_ELT(names, i++, mkChar("ushort2"));
    INTEGER(r_ans)[i] = sizeof(struct short3);
    SET_STRING_ELT(names, i++, mkChar("short3"));
    INTEGER(r_ans)[i] = sizeof(struct ushort3);
    SET_STRING_ELT(names, i++, mkChar("ushort3"));
    INTEGER(r_ans)[i] = sizeof(struct short4);
    SET_STRING_ELT(names, i++, mkChar("short4"));
    INTEGER(r_ans)[i] = sizeof(struct ushort4);
    SET_STRING_ELT(names, i++, mkChar("ushort4"));
    INTEGER(r_ans)[i] = sizeof(struct int1);
    SET_STRING_ELT(names, i++, mkChar("int1"));
    INTEGER(r_ans)[i] = sizeof(struct uint1);
    SET_STRING_ELT(names, i++, mkChar("uint1"));
    INTEGER(r_ans)[i] = sizeof(struct int2);
    SET_STRING_ELT(names, i++, mkChar("int2"));
    INTEGER(r_ans)[i] = sizeof(struct uint2);
    SET_STRING_ELT(names, i++, mkChar("uint2"));
    INTEGER(r_ans)[i] = sizeof(struct int3);
    SET_STRING_ELT(names, i++, mkChar("int3"));
    INTEGER(r_ans)[i] = sizeof(struct uint3);
    SET_STRING_ELT(names, i++, mkChar("uint3"));
    INTEGER(r_ans)[i] = sizeof(struct int4);
    SET_STRING_ELT(names, i++, mkChar("int4"));
    INTEGER(r_ans)[i] = sizeof(struct uint4);
    SET_STRING_ELT(names, i++, mkChar("uint4"));
    INTEGER(r_ans)[i] = sizeof(struct long1);
    SET_STRING_ELT(names, i++, mkChar("long1"));
    INTEGER(r_ans)[i] = sizeof(struct ulong1);
    SET_STRING_ELT(names, i++, mkChar("ulong1"));
    INTEGER(r_ans)[i] = sizeof(struct long2);
    SET_STRING_ELT(names, i++, mkChar("long2"));
    INTEGER(r_ans)[i] = sizeof(struct ulong2);
    SET_STRING_ELT(names, i++, mkChar("ulong2"));
    INTEGER(r_ans)[i] = sizeof(struct long3);
    SET_STRING_ELT(names, i++, mkChar("long3"));
    INTEGER(r_ans)[i] = sizeof(struct ulong3);
    SET_STRING_ELT(names, i++, mkChar("ulong3"));
    INTEGER(r_ans)[i] = sizeof(struct long4);
    SET_STRING_ELT(names, i++, mkChar("long4"));
    INTEGER(r_ans)[i] = sizeof(struct ulong4);
    SET_STRING_ELT(names, i++, mkChar("ulong4"));
    INTEGER(r_ans)[i] = sizeof(struct float1);
    SET_STRING_ELT(names, i++, mkChar("float1"));
    INTEGER(r_ans)[i] = sizeof(struct float2);
    SET_STRING_ELT(names, i++, mkChar("float2"));
    INTEGER(r_ans)[i] = sizeof(struct float3);
    SET_STRING_ELT(names, i++, mkChar("float3"));
    INTEGER(r_ans)[i] = sizeof(struct float4);
    SET_STRING_ELT(names, i++, mkChar("float4"));
    INTEGER(r_ans)[i] = sizeof(struct longlong1);
    SET_STRING_ELT(names, i++, mkChar("longlong1"));
    INTEGER(r_ans)[i] = sizeof(struct ulonglong1);
    SET_STRING_ELT(names, i++, mkChar("ulonglong1"));
    INTEGER(r_ans)[i] = sizeof(struct longlong2);
    SET_STRING_ELT(names, i++, mkChar("longlong2"));
    INTEGER(r_ans)[i] = sizeof(struct ulonglong2);
    SET_STRING_ELT(names, i++, mkChar("ulonglong2"));
    INTEGER(r_ans)[i] = sizeof(struct longlong3);
    SET_STRING_ELT(names, i++, mkChar("longlong3"));
    INTEGER(r_ans)[i] = sizeof(struct ulonglong3);
    SET_STRING_ELT(names, i++, mkChar("ulonglong3"));
    INTEGER(r_ans)[i] = sizeof(struct longlong4);
    SET_STRING_ELT(names, i++, mkChar("longlong4"));
    INTEGER(r_ans)[i] = sizeof(struct ulonglong4);
    SET_STRING_ELT(names, i++, mkChar("ulonglong4"));
    INTEGER(r_ans)[i] = sizeof(struct double1);
    SET_STRING_ELT(names, i++, mkChar("double1"));
    INTEGER(r_ans)[i] = sizeof(struct double2);
    SET_STRING_ELT(names, i++, mkChar("double2"));
    INTEGER(r_ans)[i] = sizeof(struct double3);
    SET_STRING_ELT(names, i++, mkChar("double3"));
    INTEGER(r_ans)[i] = sizeof(struct double4);
    SET_STRING_ELT(names, i++, mkChar("double4"));
    INTEGER(r_ans)[i] = sizeof(struct char1);
    SET_STRING_ELT(names, i++, mkChar("char1"));
    INTEGER(r_ans)[i] = sizeof(struct uchar1);
    SET_STRING_ELT(names, i++, mkChar("uchar1"));
    INTEGER(r_ans)[i] = sizeof(struct char2);
    SET_STRING_ELT(names, i++, mkChar("char2"));
    INTEGER(r_ans)[i] = sizeof(struct uchar2);
    SET_STRING_ELT(names, i++, mkChar("uchar2"));
    INTEGER(r_ans)[i] = sizeof(struct char3);
    SET_STRING_ELT(names, i++, mkChar("char3"));
    INTEGER(r_ans)[i] = sizeof(struct uchar3);
    SET_STRING_ELT(names, i++, mkChar("uchar3"));
    INTEGER(r_ans)[i] = sizeof(struct char4);
    SET_STRING_ELT(names, i++, mkChar("char4"));
    INTEGER(r_ans)[i] = sizeof(struct uchar4);
    SET_STRING_ELT(names, i++, mkChar("uchar4"));
    INTEGER(r_ans)[i] = sizeof(struct short1);
    SET_STRING_ELT(names, i++, mkChar("short1"));
    INTEGER(r_ans)[i] = sizeof(struct ushort1);
    SET_STRING_ELT(names, i++, mkChar("ushort1"));
    INTEGER(r_ans)[i] = sizeof(struct short2);
    SET_STRING_ELT(names, i++, mkChar("short2"));
    INTEGER(r_ans)[i] = sizeof(struct ushort2);
    SET_STRING_ELT(names, i++, mkChar("ushort2"));
    INTEGER(r_ans)[i] = sizeof(struct short3);
    SET_STRING_ELT(names, i++, mkChar("short3"));
    INTEGER(r_ans)[i] = sizeof(struct ushort3);
    SET_STRING_ELT(names, i++, mkChar("ushort3"));
    INTEGER(r_ans)[i] = sizeof(struct short4);
    SET_STRING_ELT(names, i++, mkChar("short4"));
    INTEGER(r_ans)[i] = sizeof(struct ushort4);
    SET_STRING_ELT(names, i++, mkChar("ushort4"));
    INTEGER(r_ans)[i] = sizeof(struct int1);
    SET_STRING_ELT(names, i++, mkChar("int1"));
    INTEGER(r_ans)[i] = sizeof(struct uint1);
    SET_STRING_ELT(names, i++, mkChar("uint1"));
    INTEGER(r_ans)[i] = sizeof(struct int2);
    SET_STRING_ELT(names, i++, mkChar("int2"));
    INTEGER(r_ans)[i] = sizeof(struct uint2);
    SET_STRING_ELT(names, i++, mkChar("uint2"));
    INTEGER(r_ans)[i] = sizeof(struct int3);
    SET_STRING_ELT(names, i++, mkChar("int3"));
    INTEGER(r_ans)[i] = sizeof(struct uint3);
    SET_STRING_ELT(names, i++, mkChar("uint3"));
    INTEGER(r_ans)[i] = sizeof(struct int4);
    SET_STRING_ELT(names, i++, mkChar("int4"));
    INTEGER(r_ans)[i] = sizeof(struct uint4);
    SET_STRING_ELT(names, i++, mkChar("uint4"));
    INTEGER(r_ans)[i] = sizeof(struct long1);
    SET_STRING_ELT(names, i++, mkChar("long1"));
    INTEGER(r_ans)[i] = sizeof(struct ulong1);
    SET_STRING_ELT(names, i++, mkChar("ulong1"));
    INTEGER(r_ans)[i] = sizeof(struct long2);
    SET_STRING_ELT(names, i++, mkChar("long2"));
    INTEGER(r_ans)[i] = sizeof(struct ulong2);
    SET_STRING_ELT(names, i++, mkChar("ulong2"));
    INTEGER(r_ans)[i] = sizeof(struct long3);
    SET_STRING_ELT(names, i++, mkChar("long3"));
    INTEGER(r_ans)[i] = sizeof(struct ulong3);
    SET_STRING_ELT(names, i++, mkChar("ulong3"));
    INTEGER(r_ans)[i] = sizeof(struct long4);
    SET_STRING_ELT(names, i++, mkChar("long4"));
    INTEGER(r_ans)[i] = sizeof(struct ulong4);
    SET_STRING_ELT(names, i++, mkChar("ulong4"));
    INTEGER(r_ans)[i] = sizeof(struct float1);
    SET_STRING_ELT(names, i++, mkChar("float1"));
    INTEGER(r_ans)[i] = sizeof(struct float2);
    SET_STRING_ELT(names, i++, mkChar("float2"));
    INTEGER(r_ans)[i] = sizeof(struct float3);
    SET_STRING_ELT(names, i++, mkChar("float3"));
    INTEGER(r_ans)[i] = sizeof(struct float4);
    SET_STRING_ELT(names, i++, mkChar("float4"));
    INTEGER(r_ans)[i] = sizeof(struct longlong1);
    SET_STRING_ELT(names, i++, mkChar("longlong1"));
    INTEGER(r_ans)[i] = sizeof(struct ulonglong1);
    SET_STRING_ELT(names, i++, mkChar("ulonglong1"));
    INTEGER(r_ans)[i] = sizeof(struct longlong2);
    SET_STRING_ELT(names, i++, mkChar("longlong2"));
    INTEGER(r_ans)[i] = sizeof(struct ulonglong2);
    SET_STRING_ELT(names, i++, mkChar("ulonglong2"));
    INTEGER(r_ans)[i] = sizeof(struct longlong3);
    SET_STRING_ELT(names, i++, mkChar("longlong3"));
    INTEGER(r_ans)[i] = sizeof(struct ulonglong3);
    SET_STRING_ELT(names, i++, mkChar("ulonglong3"));
    INTEGER(r_ans)[i] = sizeof(struct longlong4);
    SET_STRING_ELT(names, i++, mkChar("longlong4"));
    INTEGER(r_ans)[i] = sizeof(struct ulonglong4);
    SET_STRING_ELT(names, i++, mkChar("ulonglong4"));
    INTEGER(r_ans)[i] = sizeof(struct double1);
    SET_STRING_ELT(names, i++, mkChar("double1"));
    INTEGER(r_ans)[i] = sizeof(struct double2);
    SET_STRING_ELT(names, i++, mkChar("double2"));
    INTEGER(r_ans)[i] = sizeof(struct double3);
    SET_STRING_ELT(names, i++, mkChar("double3"));
    INTEGER(r_ans)[i] = sizeof(struct double4);
    SET_STRING_ELT(names, i++, mkChar("double4"));
    INTEGER(r_ans)[i] = sizeof(struct dim3);
    SET_STRING_ELT(names, i++, mkChar("dim3"));
    INTEGER(r_ans)[i] = sizeof(struct dim3);
    SET_STRING_ELT(names, i++, mkChar("dim3"));
    
    SET_NAMES(r_ans, names);
    UNPROTECT(2);
    return(r_ans);
}
