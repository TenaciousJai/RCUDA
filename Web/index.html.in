<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html> <head>
<link rel="stylesheet" href="http://www.omegahat.org/OmegaTech.css">
<title>RCUDA</title>
</head>

<body>
<h1>RCUDA - Bindings for R to the CUDA API</h1>

<p align="right"><a href="@TAR_FILE@">@TAR_FILE@</a></p>
<p align="right"><a href="https://github.com/duncantl/RCUDA.git">RCUDA
on github</a></p>
<p>
Paul Baines<br/>
Duncan Temple Lang

<p>

This R package is an interface to the CUDA API and libraries. It
allows R programmers to invoke code on a Nvidia (GP)GPU.
This gives extensive parallelism on ALUs.

<p/>

This package is similar to Simon Urbanek's <a
href="http://cran.r-project.org/web/packages/OpenCL/">OpenCL</a>
package, but specifically targets CUDA and Nvidia.  These packages
provide the building blocks for people to use the GPUs from within R
in arbitrary ways. They allow one to write code in R that manipulates
the GPU.  This is different from packages such as gputools or rgpu
which provide R functions for particular algorithms which are
programmed in C and leverage the GPU through that C code.  OpenCL and
RCUDA aim to make writing that code feasible in R.  This is allows us
to use higher-level programming languages and also makes it much
easier to experiment with GPUs.
This leads to more flexible code and much less of it.

<h2>Current Status</h2>
<p>
We have programmatically generated bindings
to almost all of the routines in the CUDA SDK API
and to the enumerated constants and non-opaque data structures.

<p>
We have also managed to translate/compile a very simple kernel
written in R code to PTX code and load and invoke that with RCUDA.
The compilation is done in R using the 
<a href="../Rllvm">Rllvm</a> and <a
href="../RLLVMCompile">RLLVMCompile</a> packages.
(See the development versions on github at present)

<p>
We have also developed an interface to libNVVM for converting
LLVM Intermediate Representation (IR) code to PTX.
This gives us two ways to generate the PTX from R code.


<h2>Examples</h2>
<dl>
  <dt>
  <li> <a href="explorations/dnorm.R">normal density</a>
  <dd> This avoids excess memory by writing the results into the same
      vector as the inputs.

  <dt>
  <li> <a href="explorations/dnormOutput.R">normal density</a>
  <dd> This uses a separate input and output vector.

  <dt>
  <li> <a href="explorations/grid.R">grid.R</a>
  <dd> Exploring using different geometries or dimensions for the grid
     and blocks.
      
  <dt>
  <li> <a href="UserGuide.Rdb">brief user's guide</a> in development.
  <dd>

  <dt>
  <li> <a href="tests">Examples in tests/</a>
  <dd>
  <dt>
  <li> <a href="tests">Complete collection of examples in explorations/</a>
  <dd>      
      
  <dt>
  <li> <a href="RCUDA.pdf">Draft of a paper describing RCUDA</a>
  <dd>

  <dt>
  <li> <a href="../Rllvm/ptxNVVMExample.html">Compiling R code to
  PTX</a>
      with <a href="../Rllvm">Rllvm</a>, <a  href="../RLLVMCompile">RLLVMCompile</a>
      and optionally <a href="../Rnvvm">Rnvvm</a>
  <dd>
</dl>

<hr>
<address><a href="http://www.stat.ucdavis.edu/~duncan">Duncan Temple Lang</a>
<a href=mailto:dtemplelang@ucdavis.edu>&lt;dtemplelang@ucdavis.edu&gt;</a></address>
<!-- hhmts start -->
Last modified: Thu Jul 18 07:39:32 PDT 2013
<!-- hhmts end -->
</body> </html>
